import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
import random

def read_tasks(filename):
    """
    –°—á–∏—Ç—ã–≤–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–∑ —Ñ–∞–π–ª–∞:
      j: <—á–∏—Å–ª–æ>
      t: <—á–∏—Å–ª–æ>
      ùúè: <—á–∏—Å–ª–æ>
      machines: <m1> <m2> ...
    —Å –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π:
      {
        "j": int,
        "t": int,
        "tau": int,
        "machines": [int, ...]
      }
    """
    tasks = []
    with open(filename, "r", encoding="utf-8") as f:
        lines = [line.strip() for line in f if line.strip()]

    # –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –∑–∞–Ω–∏–º–∞–µ—Ç 4 —Å—Ç—Ä–æ–∫–∏ (j, t, œÑ, machines).
    # –®–∞–≥–∞–µ–º –ø–æ 4 —Å—Ç—Ä–æ–∫–∏ –∑–∞ —Ä–∞–∑.
    for i in range(0, len(lines), 4):
        # 1) j: 1
        j_line = lines[i]
        # 2) t: 5
        t_line = lines[i+1]
        # 3) ùúè: 0
        tau_line = lines[i+2]
        # 4) machines: 1 1
        machines_line = lines[i+3]

        j_val = int(j_line.split(":")[1])
        t_val = int(t_line.split(":")[1])
        tau_val = int(tau_line.split(":")[1])
        machines_str = machines_line.split(":")[1].split()
        machines_list = list(map(int, machines_str))

        tasks.append({
            "j": j_val,
            "t": t_val,
            "tau": tau_val,
            "machines": machines_list
        })

    return tasks

def plot_tasks(tasks):
    """
    –°—Ç—Ä–æ–∏—Ç ¬´–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏¬ª –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏:
      - X = œÑ (start), width = t
      - Y = min(machines), height = len(machines)
      - –¶–≤–µ—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç j
    """
    fig, ax = plt.subplots(figsize=(8, 5))

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ j
    unique_js = sorted(set(task["j"] for task in tasks))
    color_map = {}
    for j in unique_js:
        color_map[j] = (random.random(), random.random(), random.random())

    # –†–∏—Å—É–µ–º –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É –æ–¥–Ω–∏–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–º
    for task in tasks:
        j = task["j"]
        t = task["t"]          # ¬´–¥–ª–∏–Ω–∞¬ª –ø–æ X
        tau = task["tau"]      # ¬´–Ω–∞—á–∞–ª–æ¬ª –ø–æ X
        machines = task["machines"]
        
        # –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ø–æ Y:
        y = min(machines) if machines else 0
        # –í—ã—Å–æ—Ç–∞ —Ä–∞–≤–Ω–∞ —á–∏—Å–ª—É –º–∞—à–∏–Ω:
        h = len(machines)
        
        # –¶–≤–µ—Ç –∑–∞–¥–∞—á–∏
        color = color_map[j]

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫
        rect = Rectangle(
            (tau, y),  # (X, Y) ‚Äì –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ª–µ–≤–æ–≥–æ –Ω–∏–∂–Ω–µ–≥–æ —É–≥–ª–∞
            t,         # —à–∏—Ä–∏–Ω–∞ (–ø—Ä–æ—Ç—è–∂—ë–Ω–Ω–æ—Å—Ç—å –ø–æ X)
            h,         # –≤—ã—Å–æ—Ç–∞ (–ø—Ä–æ—Ç—è–∂—ë–Ω–Ω–æ—Å—Ç—å –ø–æ Y)
            facecolor=color,
            edgecolor="black",
            label=f"Task {j}"
        )
        ax.add_patch(rect)

    # –ü–æ–¥–ø–∏—Å–∏ –æ—Å–µ–π
    ax.set_xlabel("Time (t)")
    ax.set_ylabel("Machines")
    ax.set_title("Tasks Visualization")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –æ—Å–µ–π (–º–æ–∂–Ω–æ –ø–æ–¥–æ–≥–Ω–∞—Ç—å –ø–æ–¥ –¥–∞–Ω–Ω—ã–µ)
    max_t = max(task["tau"] + task["t"] for task in tasks) if tasks else 1
    ax.set_xlim(0, max_t + 1)
    max_m = 0
    for task in tasks:
        if task["machines"]:
            y_val = min(task["machines"])
            h_val = len(task["machines"])
            if y_val + h_val > max_m:
                max_m = y_val + h_val
    ax.set_ylim(0, max_m + 1)

    # –õ–µ–≥–µ–Ω–¥—É —Ä–∏—Å—É–µ–º –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º j
    # –ß—Ç–æ–±—ã –≤ –ª–µ–≥–µ–Ω–¥–µ –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å 5 —Ä–∞–∑ "Task 1", 
    # –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏:
    handles = []
    for j in unique_js:
        patch = Rectangle((0, 0), 1, 1, color=color_map[j], label=f"Task {j}")
        handles.append(patch)
    ax.legend(handles=handles, loc="upper right")

    plt.grid(True, linestyle="--", alpha=0.6)
    plt.show()

if __name__ == "__main__":
    tasks = read_tasks("tasks.txt")  # –í–∞—à —Ñ–∞–π–ª —Å –∑–∞–¥–∞—á–∞–º–∏
    for task in tasks:
        print(task["machines"])
    plot_tasks(tasks)
